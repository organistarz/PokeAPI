AWSTemplateFormatVersion: '2010-09-09'
Parameters:
    KeyName:
        Type: String
        Default: VK305190
    SubnetId:
        Type: String
        Default: subnet-0a9192211bde64124
Resources:
    ArtifactStore:
        Type: AWS::S3::Bucket
    CodeBuildRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Statement:
                    - Effect: Allow
                      Principal:
                        Service: codebuild.amazonaws.com
                      Action: sts:AssumeRole
            Path: "/"
            Policies:
              - PolicyName: CodeBuildRolePolicy
                PolicyDocument:
                  Statement:
                    - Effect: Allow
                      Action: '*'
                      Resource: '*'
    CodeBuildProject:
        Type: AWS::CodeBuild::Project
        Properties:
            ServiceRole: !GetAtt CodeBuildRole.Arn
            Artifacts:
                Type: CODEPIPELINE
            Environment:
                ComputeType: BUILD_GENERAL1_SMALL
                Image: "aws/codebuild/standard:7.0"
                Type: LINUX_CONTAINER
            Source:
                Type: CODEPIPELINE
            TimeoutInMinutes: 30
    CodeDeployRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Statement:
                    - Effect: Allow
                      Principal:
                          Service:
                              - codedeploy.amazonaws.com
                      Action: sts:AssumeRole
            Path: "/"
            Policies:
                - PolicyName: CodeDeployRolePolicy
                  PolicyDocument:
                      Statement:
                          - Effect: Allow
                            Action: '*'
                            Resource: '*'
    CodeDeployApplication:
        Type: AWS::CodeDeploy::Application
    CodeDeployDeploymentGroup:
        Type: AWS::CodeDeploy::DeploymentGroup
        Properties:
            ApplicationName: !Ref CodeDeployApplication
            DeploymentConfigName: CodeDeployDefault.OneAtATime
            DeploymentStyle:
                DeploymentOption: "WITHOUT_TRAFFIC_CONTROL"
            Ec2TagFilters: [{
                Type: 'KEY_AND_VALUE',
                Key: 'project-name',
                Value: 'pokeapi'
            }]
            ServiceRoleArn: !GetAtt CodeDeployRole.Arn
    ServerInstanceProfile:
        Type: AWS::IAM::InstanceProfile
        Properties:
            InstanceProfileName:
                Fn::Join:
                    - "-"
                    -   - !Ref AWS::StackName
                        - !Ref AWS::Region
                        - "server-instance-profile"
            Path: /
            Roles:
                - !Ref ServerInstanceRole
    ServerInstanceSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Enable HTTP/HTTPS access for EC2 instances
            SecurityGroupIngress:
                -   IpProtocol: "tcp"
                    FromPort: 22
                    ToPort: 22
                    CidrIp: 0.0.0.0/0
                -   IpProtocol: "tcp"
                    FromPort: 80
                    ToPort: 80
                    CidrIp: 0.0.0.0/0
                -   IpProtocol: "tcp"
                    FromPort: 443
                    ToPort: 443
                    CidrIp: 0.0.0.0/0
                -   IpProtocol: "tcp"
                    FromPort: 3001
                    ToPort: 3001
                    CidrIp: 0.0.0.0/0
    ServerInstanceRole:
        Type: AWS::IAM::Role
        Properties:
            RoleName: !Join
                - '-'
                - - !Ref AWS::StackName
                  - !Ref AWS::Region
                  - server-instance-role
            AssumeRolePolicyDocument:
                Statement:
                    - Action: 'sts:AssumeRole'
                      Effect: Allow
                      Principal:
                          Service: ec2.amazonaws.com
    ServerInstance:
        Type: AWS::EC2::Instance
        Properties:
            ImageId: 'ami-04a81a99f5ec58529'
            InstanceType: t2.micro
            KeyName: VK305190
            SubnetId: subnet-0a9192211bde64124
            IamInstanceProfile: !Ref ServerInstanceProfile
            SecurityGroupIds:
                - !GetAtt ServerInstanceSecurityGroup.GroupId
            UserData:
                Fn::Base64:
                    Fn::Join:
                        - "\n"
                        -   - "#!/bin/bash -x"
                            - "export DEBIAN_FRONTEND=noninteractive"
                            - "sudo apt-get update"
                            - "sudo apt-get upgrade -yq"
                            - "sudo apt-get install -y ruby"
                            - Fn::Sub: "wget https://aws-codedeploy-${AWS::Region}.s3.amazonaws.com/latest/install"
                            - "sudo chmod +x ./install"
                            - "sudo ./install auto"
            Tags:
                - Key: 'project-name'
                  Value: 'pokeapi'
    GitHubConnection:
        Type: AWS::CodeStarConnections::Connection
        Properties:
            ConnectionName: PokeAPI
            ProviderType: GitHub
    CodePipelineRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Statement:
                    -   Effect: Allow
                        Principal:
                            Service:
                                - codepipeline.amazonaws.com
                        Action: sts:AssumeRole
            Path: "/"
            Policies:
                -   PolicyName: CodePipelineRolePolicy
                    PolicyDocument:
                        Statement:
                            -   Effect: Allow
                                Action: '*'
                                Resource: '*'
    CodePipeline:
        Type: AWS::CodePipeline::Pipeline
        Properties:
            RoleArn: !GetAtt CodePipelineRole.Arn
            ArtifactStore:
                Type: S3
                Location: !Ref ArtifactStore
            Stages:
                -   Name: Source
                    Actions:
                        -   Name: Github
                            ActionTypeId:
                                Category: Source
                                Owner: AWS
                                Provider: CodeStarSourceConnection
                                Version: 1
                            OutputArtifacts:
                                -   Name: source_artifacts
                            Configuration:
                                FullRepositoryId: organistarz/PokeAPI
                                BranchName: master
                                ConnectionArn: !Ref GitHubConnection
                            RunOrder: 1
                -   Name: Build
                    Actions:
                        -   Name: PokeAPI
                            ActionTypeId:
                                Category: Build
                                Owner: AWS
                                Provider: CodeBuild
                                Version: 1
                            InputArtifacts:
                                -   Name: source_artifacts
                            OutputArtifacts:
                                -   Name: build_artifacts
                            Configuration:
                                ProjectName: !Ref CodeBuildProject
                            RunOrder: 1
                -   Name: Deploy
                    Actions:
                        -   Name: PokeAPI
                            ActionTypeId:
                                Category: Deploy
                                Owner: AWS
                                Provider: CodeDeploy
                                Version: 1
                            InputArtifacts:
                                -   Name: build_artifacts
                            Configuration:
                                ApplicationName: !Ref CodeDeployApplication
                                DeploymentGroupName: !Ref CodeDeployDeploymentGroup